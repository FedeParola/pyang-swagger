{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "description": "config-bridge API generated from C:\\Users\\miano\\PycharmProjects\\pyang-swagger\\modules\\config-bridge.yang",
    "title": "config-bridge API"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "bridge"
    }
  ],
  "paths": {
    "/bridge/{name}/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: bridge",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "bridgebody object",
            "schema": {
              "$ref": "#/definitions/BridgeSchema"
            },
            "name": "bridge",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update bridge by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeBridgeById"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Create operation of resource: bridge",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "bridgebody object",
            "schema": {
              "$ref": "#/definitions/BridgeSchema"
            },
            "name": "bridge",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Create bridge by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "createBridgeBridgeById"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Delete operation of resource: bridge",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Delete bridge by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "deleteBridgeBridgeById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BridgeSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: bridge",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve bridge by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeBridgeById"
      }
    },
    "/bridge/{name}/name/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: name",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "namebody object",
            "schema": {
              "$ref": "#/definitions/NameSchema"
            },
            "name": "name",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update name by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeNameNameById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NameSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: name",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve name by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeNameNameById"
      }
    },
    "/bridge/{name}/address/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: address",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "addressbody object",
            "schema": {
              "$ref": "#/definitions/AddressSchema"
            },
            "name": "address",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update address by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeAddressAddressById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AddressSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: address",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve address by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeAddressAddressById"
      }
    },
    "/bridge/{name}/aging_time/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: aging_time",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "aging_timebody object",
            "schema": {
              "$ref": "#/definitions/AgingTimeSchema"
            },
            "name": "aging_time",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update aging_time by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeAgingTimeAgingTimeById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AgingTimeSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: aging_time",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve aging_time by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeAgingTimeAgingTimeById"
      }
    },
    "/bridge/{name}/stp_enabled/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: stp_enabled",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "stp_enabledbody object",
            "schema": {
              "$ref": "#/definitions/StpEnabledSchema"
            },
            "name": "stp_enabled",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update stp_enabled by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeStpEnabledStpEnabledById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/StpEnabledSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: stp_enabled",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve stp_enabled by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeStpEnabledStpEnabledById"
      }
        },
    "/bridge/{name}/fwd-database/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: fwd-database",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "fwd-databasebody object",
            "schema": {
              "$ref": "#/definitions/FwdDatabaseSchema"
            },
            "name": "fwd-database",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update fwd-database by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeFwdDatabaseFwdDatabaseById"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Create operation of resource: fwd-database",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "fwd-databasebody object",
            "schema": {
              "$ref": "#/definitions/FwdDatabaseSchema"
            },
            "name": "fwd-database",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Create fwd-database by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "createBridgeFwdDatabaseFwdDatabaseById"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Delete operation of resource: fwd-database",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Delete fwd-database by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "deleteBridgeFwdDatabaseFwdDatabaseById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FwdDatabaseSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: fwd-database",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve fwd-database by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeFwdDatabaseFwdDatabaseById"
      }
    },
    "/bridge/{name}/fwd-database/fwd-entry/{vids}/{address}/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: fwd-entry",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of vids",
            "required": true,
            "type": "string",
            "name": "vids",
            "in": "path"
          },
          {
            "description": "ID of address",
            "required": true,
            "type": "string",
            "name": "address",
            "in": "path"
          },
          {
            "description": "fwd-entrybody object",
            "schema": {
              "$ref": "#/definitions/FwdEntrySchema"
            },
            "name": "fwd-entry",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update fwd-entry by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeFwdDatabaseFwdEntryFwdEntryById"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Create operation of resource: fwd-entry",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of vids",
            "required": true,
            "type": "string",
            "name": "vids",
            "in": "path"
          },
          {
            "description": "ID of address",
            "required": true,
            "type": "string",
            "name": "address",
            "in": "path"
          },
          {
            "description": "fwd-entrybody object",
            "schema": {
              "$ref": "#/definitions/FwdEntrySchema"
            },
            "name": "fwd-entry",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Create fwd-entry by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "createBridgeFwdDatabaseFwdEntryFwdEntryById"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Delete operation of resource: fwd-entry",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of vids",
            "required": true,
            "type": "string",
            "name": "vids",
            "in": "path"
          },
          {
            "description": "ID of address",
            "required": true,
            "type": "string",
            "name": "address",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Delete fwd-entry by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "deleteBridgeFwdDatabaseFwdEntryFwdEntryById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FwdEntrySchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: fwd-entry",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of vids",
            "required": true,
            "type": "string",
            "name": "vids",
            "in": "path"
          },
          {
            "description": "ID of address",
            "required": true,
            "type": "string",
            "name": "address",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve fwd-entry by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeFwdDatabaseFwdEntryFwdEntryById"
      }
    },
    "/bridge/{name}/fwd-database/fwd-entry/{vids}/{address}/address/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: address",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of vids",
            "required": true,
            "type": "string",
            "name": "vids",
            "in": "path"
          },
          {
            "description": "ID of address",
            "required": true,
            "type": "string",
            "name": "address",
            "in": "path"
          },
          {
            "description": "addressbody object",
            "schema": {
              "$ref": "#/definitions/AddressSchema"
            },
            "name": "address",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update address by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeFwdDatabaseFwdEntryAddressAddressById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AddressSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: address",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of vids",
            "required": true,
            "type": "string",
            "name": "vids",
            "in": "path"
          },
          {
            "description": "ID of address",
            "required": true,
            "type": "string",
            "name": "address",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve address by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeFwdDatabaseFwdEntryAddressAddressById"
      }
    },
    "/bridge/{name}/fwd-database/fwd-entry/{vids}/{address}/vids/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: vids",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of vids",
            "required": true,
            "type": "string",
            "name": "vids",
            "in": "path"
          },
          {
            "description": "ID of address",
            "required": true,
            "type": "string",
            "name": "address",
            "in": "path"
          },
          {
            "description": "vidsbody object",
            "schema": {
              "$ref": "#/definitions/VidsSchema"
            },
            "name": "vids",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update vids by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeFwdDatabaseFwdEntryVidsVidsById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/VidsSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: vids",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of vids",
            "required": true,
            "type": "string",
            "name": "vids",
            "in": "path"
          },
          {
            "description": "ID of address",
            "required": true,
            "type": "string",
            "name": "address",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve vids by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeFwdDatabaseFwdEntryVidsVidsById"
      }
    },
    "/bridge/{name}/fwd-database/fwd-entry/{vids}/{address}/entry-type/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: entry-type",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of vids",
            "required": true,
            "type": "string",
            "name": "vids",
            "in": "path"
          },
          {
            "description": "ID of address",
            "required": true,
            "type": "string",
            "name": "address",
            "in": "path"
          },
          {
            "description": "entry-typebody object",
            "schema": {
              "$ref": "#/definitions/EntryTypeSchema"
            },
            "name": "entry-type",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update entry-type by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeFwdDatabaseFwdEntryEntryTypeEntryTypeById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/EntryTypeSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: entry-type",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of vids",
            "required": true,
            "type": "string",
            "name": "vids",
            "in": "path"
          },
          {
            "description": "ID of address",
            "required": true,
            "type": "string",
            "name": "address",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve entry-type by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeFwdDatabaseFwdEntryEntryTypeEntryTypeById"
      }
    },
    "/bridge/{name}/fwd-database/fwd-entry/{vids}/{address}/port_no/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: port_no",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of vids",
            "required": true,
            "type": "string",
            "name": "vids",
            "in": "path"
          },
          {
            "description": "ID of address",
            "required": true,
            "type": "string",
            "name": "address",
            "in": "path"
          },
          {
            "description": "port_nobody object",
            "schema": {
              "$ref": "#/definitions/PortNoSchema"
            },
            "name": "port_no",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update port_no by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeFwdDatabaseFwdEntryPortNoPortNoById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PortNoSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: port_no",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of vids",
            "required": true,
            "type": "string",
            "name": "vids",
            "in": "path"
          },
          {
            "description": "ID of address",
            "required": true,
            "type": "string",
            "name": "address",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve port_no by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeFwdDatabaseFwdEntryPortNoPortNoById"
      }
    },
    "/bridge/{name}/fwd-database/fwd-entry/{vids}/{address}/age/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: age",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of vids",
            "required": true,
            "type": "string",
            "name": "vids",
            "in": "path"
          },
          {
            "description": "ID of address",
            "required": true,
            "type": "string",
            "name": "address",
            "in": "path"
          },
          {
            "description": "agebody object",
            "schema": {
              "$ref": "#/definitions/AgeSchema"
            },
            "name": "age",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update age by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeFwdDatabaseFwdEntryAgeAgeById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AgeSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: age",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of vids",
            "required": true,
            "type": "string",
            "name": "vids",
            "in": "path"
          },
          {
            "description": "ID of address",
            "required": true,
            "type": "string",
            "name": "address",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve age by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeFwdDatabaseFwdEntryAgeAgeById"
      }
    },
    "/bridge/{name}/stp/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: stp",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "stpbody object",
            "schema": {
              "$ref": "#/definitions/StpSchema"
            },
            "name": "stp",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update stp by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeStpStpById"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Create operation of resource: stp",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "stpbody object",
            "schema": {
              "$ref": "#/definitions/StpSchema"
            },
            "name": "stp",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Create stp by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "createBridgeStpStpById"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Delete operation of resource: stp",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Delete stp by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "deleteBridgeStpStpById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/StpSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: stp",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve stp by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeStpStpById"
      }
    },
    "/bridge/{name}/stp/priority/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: priority",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "prioritybody object",
            "schema": {
              "$ref": "#/definitions/PrioritySchema"
            },
            "name": "priority",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update priority by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeStpPriorityPriorityById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PrioritySchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: priority",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve priority by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeStpPriorityPriorityById"
      }
    },
    "/bridge/{name}/stp/forward_delay/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: forward_delay",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "forward_delaybody object",
            "schema": {
              "$ref": "#/definitions/ForwardDelaySchema"
            },
            "name": "forward_delay",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update forward_delay by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeStpForwardDelayForwardDelayById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ForwardDelaySchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: forward_delay",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve forward_delay by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeStpForwardDelayForwardDelayById"
      }
    },
    "/bridge/{name}/stp/hello_time/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: hello_time",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "hello_timebody object",
            "schema": {
              "$ref": "#/definitions/HelloTimeSchema"
            },
            "name": "hello_time",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update hello_time by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeStpHelloTimeHelloTimeById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/HelloTimeSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: hello_time",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve hello_time by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeStpHelloTimeHelloTimeById"
      }
    },
    "/bridge/{name}/stp/max_message_age/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: max_message_age",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "max_message_agebody object",
            "schema": {
              "$ref": "#/definitions/MaxMessageAgeSchema"
            },
            "name": "max_message_age",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update max_message_age by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeStpMaxMessageAgeMaxMessageAgeById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MaxMessageAgeSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: max_message_age",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve max_message_age by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeStpMaxMessageAgeMaxMessageAgeById"
      }
    },
    "/bridge/{name}/interfaces/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: interfaces",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "interfacesbody object",
            "schema": {
              "$ref": "#/definitions/InterfacesSchema"
            },
            "name": "interfaces",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update interfaces by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeInterfacesInterfacesById"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Create operation of resource: interfaces",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "interfacesbody object",
            "schema": {
              "$ref": "#/definitions/InterfacesSchema"
            },
            "name": "interfaces",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Create interfaces by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "createBridgeInterfacesInterfacesById"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Delete operation of resource: interfaces",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Delete interfaces by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "deleteBridgeInterfacesInterfacesById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/InterfacesSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: interfaces",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve interfaces by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeInterfacesInterfacesById"
      }
    },
    "/bridge/{name}/interfaces/interface/{nterface_name}/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: interface",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of nterface_name",
            "required": true,
            "type": "string",
            "name": "nterface_name",
            "in": "path"
          },
          {
            "description": "interfacebody object",
            "schema": {
              "$ref": "#/definitions/InterfaceSchema"
            },
            "name": "interface",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update interface by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeInterfacesInterfaceInterfaceById"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Create operation of resource: interface",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of nterface_name",
            "required": true,
            "type": "string",
            "name": "nterface_name",
            "in": "path"
          },
          {
            "description": "interfacebody object",
            "schema": {
              "$ref": "#/definitions/InterfaceSchema"
            },
            "name": "interface",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Create interface by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "createBridgeInterfacesInterfaceInterfaceById"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Delete operation of resource: interface",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of nterface_name",
            "required": true,
            "type": "string",
            "name": "nterface_name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Delete interface by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "deleteBridgeInterfacesInterfaceInterfaceById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/InterfaceSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: interface",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of nterface_name",
            "required": true,
            "type": "string",
            "name": "nterface_name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve interface by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeInterfacesInterfaceInterfaceById"
      }
    },
    "/bridge/{name}/interfaces/interface/{nterface_name}/nterface_name/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: nterface_name",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of nterface_name",
            "required": true,
            "type": "string",
            "name": "nterface_name",
            "in": "path"
          },
          {
            "description": "nterface_namebody object",
            "schema": {
              "$ref": "#/definitions/NterfaceNameSchema"
            },
            "name": "nterface_name",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update nterface_name by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeInterfacesInterfaceNterfaceNameNterfaceNameById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NterfaceNameSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: nterface_name",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of nterface_name",
            "required": true,
            "type": "string",
            "name": "nterface_name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve nterface_name by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeInterfacesInterfaceNterfaceNameNterfaceNameById"
      }
    },
    "/bridge/{name}/interfaces/interface/{nterface_name}/address/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: address",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of nterface_name",
            "required": true,
            "type": "string",
            "name": "nterface_name",
            "in": "path"
          },
          {
            "description": "addressbody object",
            "schema": {
              "$ref": "#/definitions/AddressSchema"
            },
            "name": "address",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update address by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeInterfacesInterfaceAddressAddressById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AddressSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: address",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of nterface_name",
            "required": true,
            "type": "string",
            "name": "nterface_name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve address by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeInterfacesInterfaceAddressAddressById"
      }
    },
    "/bridge/{name}/interfaces/interface/{nterface_name}/access_mode/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: access_mode",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of nterface_name",
            "required": true,
            "type": "string",
            "name": "nterface_name",
            "in": "path"
          },
          {
            "description": "access_modebody object",
            "schema": {
              "$ref": "#/definitions/AccessModeSchema"
            },
            "name": "access_mode",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update access_mode by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeInterfacesInterfaceAccessModeAccessModeById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AccessModeSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: access_mode",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of nterface_name",
            "required": true,
            "type": "string",
            "name": "nterface_name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve access_mode by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeInterfacesInterfaceAccessModeAccessModeById"
      }
    },
    "/bridge/{name}/interfaces/interface/{nterface_name}/vlan_id/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: vlan_id",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of nterface_name",
            "required": true,
            "type": "string",
            "name": "nterface_name",
            "in": "path"
          },
          {
            "description": "vlan_idbody object",
            "schema": {
              "$ref": "#/definitions/VlanIdSchema"
            },
            "name": "vlan_id",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update vlan_id by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeInterfacesInterfaceVlanIdVlanIdById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/VlanIdSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: vlan_id",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of nterface_name",
            "required": true,
            "type": "string",
            "name": "nterface_name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve vlan_id by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeInterfacesInterfaceVlanIdVlanIdById"
      }
    },
    "/bridge/{name}/interfaces/interface/{nterface_name}/stp_interface/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: stp_interface",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of nterface_name",
            "required": true,
            "type": "string",
            "name": "nterface_name",
            "in": "path"
          },
          {
            "description": "stp_interfacebody object",
            "schema": {
              "$ref": "#/definitions/StpInterfaceSchema"
            },
            "name": "stp_interface",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update stp_interface by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeInterfacesInterfaceStpInterfaceStpInterfaceById"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Create operation of resource: stp_interface",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of nterface_name",
            "required": true,
            "type": "string",
            "name": "nterface_name",
            "in": "path"
          },
          {
            "description": "stp_interfacebody object",
            "schema": {
              "$ref": "#/definitions/StpInterfaceSchema"
            },
            "name": "stp_interface",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Create stp_interface by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "createBridgeInterfacesInterfaceStpInterfaceStpInterfaceById"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Delete operation of resource: stp_interface",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of nterface_name",
            "required": true,
            "type": "string",
            "name": "nterface_name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Delete stp_interface by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "deleteBridgeInterfacesInterfaceStpInterfaceStpInterfaceById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/StpInterfaceSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: stp_interface",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of nterface_name",
            "required": true,
            "type": "string",
            "name": "nterface_name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve stp_interface by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeInterfacesInterfaceStpInterfaceStpInterfaceById"
      }
    },
    "/bridge/{name}/interfaces/interface/{nterface_name}/stp_interface/path_cost/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: path_cost",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of nterface_name",
            "required": true,
            "type": "string",
            "name": "nterface_name",
            "in": "path"
          },
          {
            "description": "path_costbody object",
            "schema": {
              "$ref": "#/definitions/PathCostSchema"
            },
            "name": "path_cost",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update path_cost by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeInterfacesInterfaceStpInterfacePathCostPathCostById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PathCostSchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: path_cost",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of nterface_name",
            "required": true,
            "type": "string",
            "name": "nterface_name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve path_cost by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeInterfacesInterfaceStpInterfacePathCostPathCostById"
      }
    },
    "/bridge/{name}/interfaces/interface/{nterface_name}/stp_interface/port_priority/": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Update operation of resource: port_priority",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of nterface_name",
            "required": true,
            "type": "string",
            "name": "nterface_name",
            "in": "path"
          },
          {
            "description": "port_prioritybody object",
            "schema": {
              "$ref": "#/definitions/PortPrioritySchema"
            },
            "name": "port_priority",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Update port_priority by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "updateBridgeInterfacesInterfaceStpInterfacePortPriorityPortPriorityById"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PortPrioritySchema"
            }
          },
          "400": {
            "description": "Internal Error"
          }
        },
        "description": "Retrieve operation of resource: port_priority",
        "parameters": [
          {
            "description": "ID of name",
            "required": true,
            "type": "string",
            "name": "name",
            "in": "path"
          },
          {
            "description": "ID of nterface_name",
            "required": true,
            "type": "string",
            "name": "nterface_name",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bridge"
        ],
        "summary": "Retrieve port_priority by ID",
        "consumes": [
          "application/json"
        ],
        "operationId": "retrieveBridgeInterfacesInterfaceStpInterfacePortPriorityPortPriorityById"
      }
    }
  },
  "definitions": {
    "BridgeSchema": {
            "properties": {
              "stpEnabled": {
                "type": "boolean"
              },
              "stp": {
                "properties": {
                  "priority": {
                    "type": "string"
                  },
                  "maxMessageAge": {
                    "type": "string"
                  },
                  "helloTime": {
                    "type": "string"
                  },
                  "forwardDelay": {
                    "type": "string"
                  }
                }
              },
              "name": {
                "type": "string"
              },
              "agingTime": {
                "type": "string"
              },
              "address": {
                "type": "string",
                "description": "The MAC address used by the STP."
              },
              "interfaces": {
                "description": "name=\u2019Interface List\u2019",
                "properties": {
                  "interface": {
                    "items": {
                      "properties": {
                        "accessMode": {
                          "enum": [
                            "access",
                            "trunk"
                          ],
                          "type": "string"
                        },
                        "stpInterface": {
                          "properties": {
                            "pathCost": {
                              "type": "string"
                            },
                            "portPriority": {
                              "type": "string"
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "vlanId": {
                          "type": "string"
                        },
                        "address": {
                          "type": "string"
                        }
                      }
                    },
                    "type": "array",
                    "x-key": [
                      "name"
                    ]
                  }
                }
              },
              "fwdDatabase": {
                "properties": {
                  "fwdEntry": {
                    "items": {
                      "properties": {
                        "vids": {
                          "type": "string"
                        },
                        "age": {
                          "type": "string"
                        },
                        "entryType": {
                          "enum": [
                            "static",
                            "dynamic"
                          ],
                          "type": "string"
                        },
                        "portNo": {
                          "type": "string"
                        },
                        "address": {
                          "type": "string"
                        }
                      }
                    },
                    "type": "array",
                    "x-key": [
                      "vids",
                      "address"
                    ]
                  }
                }
              }
            }
    },
    "NameSchema": {
      "properties": {
        "name": {
          "type": "string"
        }
      }
        },
    "AddressSchema": {
      "properties": {
        "address": {
                    "type": "string"
        }
      }
    },
    "AgingTimeSchema": {
      "properties": {
        "agingTime": {
          "type": "string"
        }
      }
        },
    "StpEnabledSchema": {
      "properties": {
        "stpEnabled": {
          "type": "boolean"
        }
      }
    },
    "FwdDatabaseSchema": {
      "properties": {
        "fwdEntry": {
          "items": {
            "properties": {
              "vids": {
                "type": "string"
              },
              "age": {
                "type": "string"
              },
              "entryType": {
                "enum": [
                  "static",
                  "dynamic"
                ],
                "type": "string"
              },
              "portNo": {
                "type": "string"
              },
              "address": {
                "type": "string"
              }
            }
          },
          "type": "array",
          "x-key": [
            "vids",
            "address"
          ]
        }
      }
    },
    "FwdEntrySchema": {
            "properties": {
              "vids": {
                "type": "string"
              },
              "age": {
                "type": "string"
              },
              "entryType": {
                "enum": [
                  "static",
                  "dynamic"
                ],
                "type": "string"
              },
              "portNo": {
                "type": "string"
              },
              "address": {
                "type": "string"
              }
            }
    },
    "VidsSchema": {
      "properties": {
        "vids": {
          "type": "string"
        }
      }
        },
    "EntryTypeSchema": {
      "properties": {
        "entryType": {
          "enum": [
            "static",
            "dynamic"
          ],
          "type": "string"
        }
      }
        },
    "PortNoSchema": {
      "properties": {
        "portNo": {
          "type": "string"
        }
      }
        },
    "AgeSchema": {
      "properties": {
        "age": {
          "type": "string"
        }
      }
    },
    "StpSchema": {
      "properties": {
        "priority": {
          "type": "string"
        },
        "maxMessageAge": {
          "type": "string"
        },
        "helloTime": {
          "type": "string"
        },
        "forwardDelay": {
          "type": "string"
        }
      }
    },
    "PrioritySchema": {
      "properties": {
        "priority": {
          "type": "string"
        }
      }
    },
    "ForwardDelaySchema": {
      "properties": {
        "forwardDelay": {
          "type": "string"
        }
      }
    },
    "HelloTimeSchema": {
      "properties": {
        "helloTime": {
          "type": "string"
        }
      }
    },
    "MaxMessageAgeSchema": {
      "properties": {
        "maxMessageAge": {
          "type": "string"
        }
      }
    },
    "InterfacesSchema": {
      "description": "name=\u2019Interface List\u2019",
      "properties": {
        "interface": {
          "items": {
            "properties": {
              "accessMode": {
                "enum": [
                  "access",
                  "trunk"
                ],
                "type": "string"
              },
              "stpInterface": {
                "properties": {
                  "pathCost": {
                    "type": "string"
                  },
                  "portPriority": {
                    "type": "string"
                  }
                }
              },
              "name": {
                "type": "string"
              },
              "vlanId": {
                "type": "string"
              },
              "address": {
                "type": "string"
              }
            }
          },
          "type": "array",
          "x-key": [
            "name"
          ]
        }
      }
    },
    "InterfaceSchema": {
      "properties": {
        "nterfaceName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "stpInterface": {
          "properties": {
            "pathCost": {
              "type": "string"
            },
            "portPriority": {
              "type": "string"
            }
          }
        },
        "vlanId": {
          "type": "string"
        },
        "accessMode": {
          "enum": [
            "access",
            "trunk"
          ],
          "type": "string"
        }
      }
        },
    "NterfaceNameSchema": {
      "properties": {
        "nterfaceName": {
          "type": "string"
        }
      }
        },
    "AccessModeSchema": {
      "properties": {
        "accessMode": {
          "enum": [
            "access",
            "trunk"
          ],
          "type": "string"
        }
      }
    },
    "VlanIdSchema": {
      "properties": {
        "vlanId": {
          "type": "string"
        }
      }
    },
    "StpInterfaceSchema": {
      "properties": {
        "pathCost": {
          "type": "string"
        },
        "portPriority": {
          "type": "string"
        }
      }
    },
    "PathCostSchema": {
      "properties": {
        "pathCost": {
          "type": "string"
        }
      }
        },
    "PortPrioritySchema": {
      "properties": {
        "portPriority": {
          "type": "string"
        }
      }
    }
  }
}